#!/usr/bin/python3
# coding: utf-8
import sys
import os
import argparse
import logging
import json
from blogconvertlib.core import Blog


def main():
    parser = argparse.ArgumentParser(description="Convert from ikiwiki to hugo.")
    parser.add_argument("srcdir", help="source directory")
    parser.add_argument("destdir", help="destination directory")
    parser.add_argument("-v", "--verbose", action="store_true", help="verbose output")
    parser.add_argument("-t", "--type", action="store", help="output type (dump, hugo, nikola)")
    parser.add_argument("-e", "--extrainfo", action="store", help="extra information from a json")

    args = parser.parse_args()

    FORMAT = "%(asctime)-15s %(levelname)s %(message)s"
    if args.verbose:
        logging.basicConfig(level=logging.INFO, stream=sys.stderr, format=FORMAT)
    else:
        logging.basicConfig(level=logging.WARN, stream=sys.stderr, format=FORMAT)

    blog = Blog(os.path.abspath(args.srcdir))
    if args.extrainfo:
        blog.load_extrainfo(args.extrainfo)
    blog.read_years()
    blog.read_talks()

    if args.type == "dump":
        from blogconvertlib.dump import DumpWriter
        writer = DumpWriter(args.destdir)
    elif args.type == "hugo":
        from blogconvertlib.hugo import HugoWriter
        writer = HugoWriter(args.destdir)
    elif args.type == "nikola":
        from blogconvertlib.nikola import NikolaWriter
        writer = NikolaWriter(args.destdir)
    else:
        raise RuntimeError("Unknown output type {}".format(args.type))

    writer.write(blog)


if __name__ == "__main__":
    main()
